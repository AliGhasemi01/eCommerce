Index: app/src/main/java/com/example/ecommerce/LogInFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.ecommerce;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.navigation.Navigation;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport java.util.List;\r\n\r\npublic class LogInFragment extends Fragment {\r\n\r\n    private Button login_btn;\r\n    private EditText inputUsername, inputPassword;\r\n    private TextView forgotPassword;\r\n    DataBaseHelper dataBaseHelper;\r\n\r\n\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n\r\n        View view = inflater.inflate(R.layout.fragment_log_in, container, false);\r\n\r\n        login_btn = view.findViewById(R.id.login_btn);\r\n        inputUsername = view.findViewById(R.id.username_login);\r\n        inputPassword = view.findViewById(R.id.password_login);\r\n        forgotPassword = view.findViewById(R.id.forgot_password_textView);\r\n        dataBaseHelper = new DataBaseHelper(getActivity());\r\n\r\n\r\n        login_btn.setOnClickListener(v -> {\r\n            String username = inputUsername.getText().toString();\r\n            String password = inputPassword.getText().toString();\r\n            List<Admin> admins = dataBaseHelper.getAdmins();\r\n            List<Client> clients = dataBaseHelper.getEveryClient();\r\n            boolean flag = true;\r\n            for (Admin admin : admins){\r\n                if(admin.getUsername().equalsIgnoreCase(username) && admin.getPassword().equals(password)){\r\n                    Toast.makeText(getActivity(), \"Welcome back \" + admin.getUsername(), Toast.LENGTH_LONG).show();\r\n                    flag = false;\r\n                    Intent intent = new Intent(getActivity(), HomeActivity.class);\r\n                    startActivity(intent);\r\n                    //go to the next activity...\r\n                }\r\n            }\r\n            for (Client client : clients){\r\n                if(client.getUserName().equalsIgnoreCase(username) && client.getPassword().equals(password)){\r\n                    Toast.makeText(getActivity(), \"Welcome back \" + client.getUserName(), Toast.LENGTH_LONG).show();\r\n                    flag = false;\r\n                    //go to the next activity...\r\n                }\r\n            }\r\n            if(flag)\r\n                Toast.makeText(getActivity(),\"Invalid Username or Password\", Toast.LENGTH_LONG).show();\r\n        });\r\n        forgotPassword.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Navigation.findNavController(getActivity(), R.id.fragment_main).navigate(R.id.action_logInFragment_to_fragment_forgot_password);\r\n            }\r\n        });\r\n\r\n        return view;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/ecommerce/LogInFragment.java	(revision 4ec2838ff6a361be7691f5ee765fc772926d8ae3)
+++ app/src/main/java/com/example/ecommerce/LogInFragment.java	(date 1623855329305)
@@ -48,12 +48,16 @@
                     flag = false;
                     Intent intent = new Intent(getActivity(), HomeActivity.class);
                     startActivity(intent);
-                    //go to the next activity...
                 }
             }
             for (Client client : clients){
                 if(client.getUserName().equalsIgnoreCase(username) && client.getPassword().equals(password)){
-                    Toast.makeText(getActivity(), "Welcome back " + client.getUserName(), Toast.LENGTH_LONG).show();
+                    int login_count = client.getLogin_count() + 1;
+                    boolean updated = dataBaseHelper.updateLoginCount(client, String.valueOf(login_count));
+                    if (updated)
+                        Toast.makeText(getActivity(), "Welcome back " + client.getUserName(), Toast.LENGTH_LONG).show();
+                    else
+                        Toast.makeText(getActivity(), "Task failed, try again", Toast.LENGTH_LONG).show();
                     flag = false;
                     //go to the next activity...
                 }
Index: app/src/main/java/com/example/ecommerce/DataBaseHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.ecommerce;\r\n\r\nimport android.content.ContentValues;\r\nimport android.content.Context;\r\nimport android.database.Cursor;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.database.sqlite.SQLiteOpenHelper;\r\n\r\nimport androidx.annotation.Nullable;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class DataBaseHelper extends SQLiteOpenHelper {\r\n\r\n    public static final String CLIENT_USERNAME = \"CLIENT_USERNAME\";\r\n    public static final String CLIENT_FIRSTNAME = \"CLIENT_FIRSTNAME\";\r\n    public static final String CLIENT_LASTNAME = \"CLIENT_LASTNAME\";\r\n    public static final String CLIENT_EMAIL = \"CLIENT_EMAIL\";\r\n    public static final String CLIENT_PHONENUMBER = \"CLIENT_PHONENUMBER\";\r\n    public static final String CLIENT_PASSWORD = \"CLIENT_PASSWORD\";\r\n    public static final String IS_SELLER = \"IS_SELLER\";\r\n    public static final String CLIENT_TABLE = \"CLIENT_TABLE\";\r\n    public static final String ADMIN_USERNAME = \"ADMIN_USERNAME\";\r\n    public static final String ADMIN_PASSWORD = \"ADMIN_PASSWORD\";\r\n    public static final String ADMIN_TABLE = \"ADMIN_TABLE\";\r\n\r\n    public DataBaseHelper(@Nullable Context context) {\r\n        super(context, \"database.db\", null, 1);\r\n    }\r\n\r\n    //creating the table\r\n    @Override\r\n    public void onCreate(SQLiteDatabase db) {\r\n        String onCreateTableString_Users = \"CREATE TABLE \" + CLIENT_TABLE + \"(ID INTEGER PRIMARY KEY AUTOINCREMENT, \" + CLIENT_USERNAME + \" TEXT , \" + CLIENT_FIRSTNAME + \" TEXT, \" + CLIENT_LASTNAME + \" TEXT, \" + CLIENT_EMAIL + \" TEXT, \" + CLIENT_PHONENUMBER + \" TEXT, \" + CLIENT_PASSWORD + \" TEXT, \" + IS_SELLER + \" BOOLEAN ) \";\r\n        String onCreateTableString_Admins = \"CREATE TABLE \" + ADMIN_TABLE + \"(ID INTEGER PRIMARY KEY AUTOINCREMENT, \" + ADMIN_USERNAME + \" TEXT , \" + ADMIN_PASSWORD + \" TEXT ) \";\r\n        db.execSQL(onCreateTableString_Users);\r\n        db.execSQL(onCreateTableString_Admins);\r\n    }\r\n\r\n    @Override\r\n    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\r\n\r\n    }\r\n\r\n    //method to add a new client\r\n    public boolean addAdmin(Admin admin) {\r\n        SQLiteDatabase DB = this.getWritableDatabase();\r\n        ContentValues CV = new ContentValues();\r\n\r\n        CV.put(ADMIN_USERNAME, admin.getUsername());\r\n        CV.put(ADMIN_PASSWORD, admin.getPassword());\r\n\r\n        long added = DB.insert(ADMIN_TABLE, null, CV);\r\n\r\n        return added != -1;\r\n    }\r\n\r\n    public boolean addClient(Client client){\r\n        SQLiteDatabase DB = this.getWritableDatabase();\r\n        ContentValues CV = new ContentValues();\r\n\r\n        CV.put(CLIENT_USERNAME, client.getUserName());\r\n        CV.put(CLIENT_FIRSTNAME, client.getFirstName());\r\n        CV.put(CLIENT_LASTNAME, client.getLastName());\r\n        CV.put(CLIENT_EMAIL, client.getEmail());\r\n        CV.put(CLIENT_PHONENUMBER, client.getPhoneNumber());\r\n        CV.put(CLIENT_PASSWORD, client.getPassword());\r\n        CV.put(IS_SELLER, client.isSeller());\r\n\r\n        long added = DB.insert(CLIENT_TABLE, null, CV);\r\n\r\n        return added != -1;\r\n    }\r\n\r\n    public List<Admin> getAdmins(){\r\n        List<Admin> admins = new ArrayList<>();\r\n        String query = \"SELECT * FROM \" + ADMIN_TABLE;\r\n\r\n        SQLiteDatabase DB = this.getReadableDatabase();\r\n\r\n        Cursor cursor = DB.rawQuery(query, null);\r\n\r\n        if(cursor.moveToFirst()){\r\n            //loop through the table of clients\r\n            do {\r\n                String UserName = cursor.getString(1);\r\n                String Password = cursor.getString(2);\r\n                Admin admin = new Admin(UserName, Password);\r\n                admins.add(admin);\r\n\r\n            } while (cursor.moveToNext());\r\n        }\r\n        else{\r\n            //task failed, list will be empty\r\n        }\r\n        cursor.close();\r\n        DB.close();\r\n        return admins;\r\n    }\r\n\r\n    public List<Client> getEveryClient(){\r\n        List<Client> clients = new ArrayList<>();\r\n\r\n        //get every client's data\r\n        String query = \"SELECT * FROM \" + CLIENT_TABLE;\r\n\r\n        SQLiteDatabase DB = this.getReadableDatabase();\r\n\r\n        Cursor cursor = DB.rawQuery(query, null);\r\n\r\n        if(cursor.moveToFirst()){\r\n            //loop through the table of clients\r\n            do {\r\n                String UserName = cursor.getString(1);\r\n                String FirstName = cursor.getString(2);\r\n                String LastName = cursor.getString(3);\r\n                String Email = cursor.getString(4);\r\n                String PhoneNumber = cursor.getString(5);\r\n                String Password = cursor.getString(6);\r\n                boolean isSeller = cursor.getInt(7) == 1;\r\n                //Client Type(Seller or Ordinary Client) should be considered too\r\n                Client client = new Client(UserName, FirstName, LastName, Email, PhoneNumber, Password, isSeller);\r\n                clients.add(client);\r\n\r\n            } while (cursor.moveToNext());\r\n        }\r\n        else{\r\n            //task failed, list will be empty\r\n        }\r\n        cursor.close();\r\n        DB.close();\r\n        return clients;\r\n    }\r\n\r\n    public boolean updatePassword(Client client, String newPassword) {\r\n        SQLiteDatabase DB = this.getWritableDatabase();\r\n        ContentValues CV = new ContentValues();\r\n        CV.put(CLIENT_PASSWORD, newPassword);\r\n\r\n        long updated = DB.update(CLIENT_TABLE, CV, CLIENT_USERNAME + \" = ?\" , new String[] {client.getUserName()});\r\n\r\n        return updated != -1;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/ecommerce/DataBaseHelper.java	(revision 4ec2838ff6a361be7691f5ee765fc772926d8ae3)
+++ app/src/main/java/com/example/ecommerce/DataBaseHelper.java	(date 1623855179750)
@@ -21,9 +21,28 @@
     public static final String CLIENT_PASSWORD = "CLIENT_PASSWORD";
     public static final String IS_SELLER = "IS_SELLER";
     public static final String CLIENT_TABLE = "CLIENT_TABLE";
+    public static final String CLIENT_LOGINCOUNT = "CLIENT_LOGINCOUNT";
     public static final String ADMIN_USERNAME = "ADMIN_USERNAME";
     public static final String ADMIN_PASSWORD = "ADMIN_PASSWORD";
     public static final String ADMIN_TABLE = "ADMIN_TABLE";
+    public static final String PRODUCTS_TABLE = "PRODUCTS_TABLE";
+    public static final String ELECTRONIC_TABLE = "ELECTRONIC_TABLE";
+    public static final String FASHION_TABLE = "FASHION_TABLE";
+    public static final String HOME_TABLE = "HOME_TABLE";
+    public static final String SPORTS_TABLE = "SPORTS_TABLE";
+    public static final String MOTORS_TABLE = "MOTORS_TABLE";
+    public static final String REALSTATE_TABLE = "REALSTATE_TABLE";
+    public static final String ENTERTAINMENT_TABLE = "ENTERTAINMENT_TABLE";
+    public static final String PRODUCT_NAME = "PRODUCT_NAME";
+    public static final String PRODUCT_PRICE = "PRODUCT_PRICE";
+    public static final String PRODUCT_CATEGORY = "PRODUCT_CATEGORY";
+    public static final String PRODUCT_SUBCATEGORY = "PRODUCT_SUBCATEGORY";
+    public static final String PRODUCT_SELLER = "PRODUCT_SELLER";
+    public static final String PRODUCT_DESCRIPTION = "PRODUCT_DESCRIPTION";
+
+
+
+
 
     public DataBaseHelper(@Nullable Context context) {
         super(context, "database.db", null, 1);
@@ -32,10 +51,29 @@
     //creating the table
     @Override
     public void onCreate(SQLiteDatabase db) {
-        String onCreateTableString_Users = "CREATE TABLE " + CLIENT_TABLE + "(ID INTEGER PRIMARY KEY AUTOINCREMENT, " + CLIENT_USERNAME + " TEXT , " + CLIENT_FIRSTNAME + " TEXT, " + CLIENT_LASTNAME + " TEXT, " + CLIENT_EMAIL + " TEXT, " + CLIENT_PHONENUMBER + " TEXT, " + CLIENT_PASSWORD + " TEXT, " + IS_SELLER + " BOOLEAN ) ";
+        String onCreateTableString_Users = "CREATE TABLE " + CLIENT_TABLE + "(ID INTEGER PRIMARY KEY AUTOINCREMENT, " + CLIENT_USERNAME + " TEXT , " + CLIENT_FIRSTNAME + " TEXT, " + CLIENT_LASTNAME + " TEXT, " + CLIENT_EMAIL + " TEXT, " + CLIENT_PHONENUMBER + " TEXT, " + CLIENT_PASSWORD + " TEXT, " + IS_SELLER + " BOOLEAN, " + CLIENT_LOGINCOUNT + " TEXT ) ";
         String onCreateTableString_Admins = "CREATE TABLE " + ADMIN_TABLE + "(ID INTEGER PRIMARY KEY AUTOINCREMENT, " + ADMIN_USERNAME + " TEXT , " + ADMIN_PASSWORD + " TEXT ) ";
+        String onCreateTableString_Products = "CREATE TABLE " + PRODUCTS_TABLE + "(ID INTEGER PRIMARY KEY AUTOINCREMENT, " + PRODUCT_NAME + " TEXT , " + PRODUCT_PRICE + " TEXT , " + PRODUCT_DESCRIPTION + " TEXT , " + PRODUCT_CATEGORY + " TEXT , " + PRODUCT_SUBCATEGORY + " TEXT , " + PRODUCT_SELLER + " TEXT ) ";
+        String onCreateTableString_Electronics = "CREATE TABLE " + ELECTRONIC_TABLE + "(ID INTEGER PRIMARY KEY AUTOINCREMENT, " + PRODUCT_NAME + " TEXT , " + PRODUCT_PRICE + " TEXT , " + PRODUCT_DESCRIPTION + " TEXT , " + PRODUCT_SUBCATEGORY + " TEXT , " + PRODUCT_SELLER + " TEXT ) ";
+        String onCreateTableString_Fashion = "CREATE TABLE " + FASHION_TABLE + "(ID INTEGER PRIMARY KEY AUTOINCREMENT, " + PRODUCT_NAME + " TEXT , " + PRODUCT_PRICE + " TEXT , " + PRODUCT_DESCRIPTION + " TEXT , " + PRODUCT_SUBCATEGORY + " TEXT , " + PRODUCT_SELLER + " TEXT ) ";
+        String onCreateTableString_Home = "CREATE TABLE " + HOME_TABLE + "(ID INTEGER PRIMARY KEY AUTOINCREMENT, " + PRODUCT_NAME + " TEXT , " + PRODUCT_PRICE + " TEXT , " + PRODUCT_DESCRIPTION + " TEXT , " + PRODUCT_SUBCATEGORY + " TEXT , " + PRODUCT_SELLER + " TEXT ) ";
+        String onCreateTableString_Sports = "CREATE TABLE " + SPORTS_TABLE + "(ID INTEGER PRIMARY KEY AUTOINCREMENT, " + PRODUCT_NAME + " TEXT , " + PRODUCT_PRICE + " TEXT , " + PRODUCT_DESCRIPTION + " TEXT , " + PRODUCT_SUBCATEGORY + " TEXT , " + PRODUCT_SELLER + " TEXT ) ";
+        String onCreateTableString_Motors = "CREATE TABLE " + MOTORS_TABLE + "(ID INTEGER PRIMARY KEY AUTOINCREMENT, " + PRODUCT_NAME + " TEXT , " + PRODUCT_PRICE + " TEXT , " + PRODUCT_DESCRIPTION + " TEXT , " + PRODUCT_SUBCATEGORY + " TEXT , " + PRODUCT_SELLER + " TEXT ) ";
+        String onCreateTableString_Realstate = "CREATE TABLE " + REALSTATE_TABLE + "(ID INTEGER PRIMARY KEY AUTOINCREMENT, " + PRODUCT_NAME + " TEXT , " + PRODUCT_PRICE + " TEXT , " + PRODUCT_DESCRIPTION + " TEXT , " + PRODUCT_SUBCATEGORY + " TEXT , " + PRODUCT_SELLER + " TEXT ) ";
+        String onCreateTableString_Entertainment = "CREATE TABLE " + ENTERTAINMENT_TABLE + "(ID INTEGER PRIMARY KEY AUTOINCREMENT, " + PRODUCT_NAME + " TEXT , " + PRODUCT_PRICE + " TEXT , " + PRODUCT_DESCRIPTION + " TEXT , " + PRODUCT_SUBCATEGORY + " TEXT , " + PRODUCT_SELLER + " TEXT ) ";
+
+
         db.execSQL(onCreateTableString_Users);
         db.execSQL(onCreateTableString_Admins);
+        db.execSQL(onCreateTableString_Products);
+        db.execSQL(onCreateTableString_Electronics);
+        db.execSQL(onCreateTableString_Fashion);
+        db.execSQL(onCreateTableString_Home);
+        db.execSQL(onCreateTableString_Sports);
+        db.execSQL(onCreateTableString_Motors);
+        db.execSQL(onCreateTableString_Realstate);
+        db.execSQL(onCreateTableString_Entertainment);
+
     }
 
     @Override
@@ -67,6 +105,7 @@
         CV.put(CLIENT_PHONENUMBER, client.getPhoneNumber());
         CV.put(CLIENT_PASSWORD, client.getPassword());
         CV.put(IS_SELLER, client.isSeller());
+        CV.put(CLIENT_LOGINCOUNT, client.getLogin_count());
 
         long added = DB.insert(CLIENT_TABLE, null, CV);
 
@@ -99,6 +138,14 @@
         return admins;
     }
 
+    public boolean updateLoginCount(Client client, String newCount){
+        SQLiteDatabase DB = this.getWritableDatabase();
+        ContentValues CV = new ContentValues();
+        CV.put(CLIENT_LOGINCOUNT, newCount);
+        long updated =  DB.update(CLIENT_TABLE, CV, CLIENT_USERNAME + " = ?" , new String[] {client.getUserName()});
+        return updated != -1;
+    }
+
     public List<Client> getEveryClient(){
         List<Client> clients = new ArrayList<>();
 
@@ -119,8 +166,8 @@
                 String PhoneNumber = cursor.getString(5);
                 String Password = cursor.getString(6);
                 boolean isSeller = cursor.getInt(7) == 1;
-                //Client Type(Seller or Ordinary Client) should be considered too
-                Client client = new Client(UserName, FirstName, LastName, Email, PhoneNumber, Password, isSeller);
+                String LoginCount = cursor.getString(8);
+                Client client = new Client(UserName, FirstName, LastName, Email, PhoneNumber, Password, isSeller, Integer.parseInt(LoginCount));
                 clients.add(client);
 
             } while (cursor.moveToNext());
Index: app/src/main/java/com/example/ecommerce/Client.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.ecommerce;\r\n\r\npublic class Client {\r\n    private String UserName;\r\n    private String FirstName;\r\n    private String LastName;\r\n    private String Email;\r\n    private String PhoneNumber;\r\n    private String Password;\r\n    private boolean IsSeller;\r\n\r\n    public Client(String userName, String firstName, String lastName, String email, String phoneNumber, String password, boolean is_Seller) {\r\n        UserName = userName;\r\n        FirstName = firstName;\r\n        LastName = lastName;\r\n        Email = email;\r\n        PhoneNumber = phoneNumber;\r\n        Password = password;\r\n        IsSeller = is_Seller;\r\n    }\r\n\r\n    public Client() {\r\n    }\r\n\r\n    public String getUserName() {\r\n        return UserName;\r\n    }\r\n\r\n    public void setUserName(String userName) {\r\n        UserName = userName;\r\n    }\r\n\r\n    public String getFirstName() {\r\n        return FirstName;\r\n    }\r\n\r\n    public void setFirstName(String firstName) {\r\n        FirstName = firstName;\r\n    }\r\n\r\n    public String getLastName() {\r\n        return LastName;\r\n    }\r\n\r\n    public void setLastName(String lastName) {\r\n        LastName = lastName;\r\n    }\r\n\r\n    public String getEmail() {\r\n        return Email;\r\n    }\r\n\r\n    public void setEmail(String email) {\r\n        Email = email;\r\n    }\r\n\r\n    public String getPhoneNumber() {\r\n        return PhoneNumber;\r\n    }\r\n\r\n    public void setPhoneNumber(String phoneNumber) {\r\n        PhoneNumber = phoneNumber;\r\n    }\r\n\r\n    public String getPassword() {\r\n        return Password;\r\n    }\r\n\r\n    public void setPassword(String password) {\r\n        Password = password;\r\n    }\r\n\r\n    public boolean isSeller() {\r\n        return IsSeller;\r\n    }\r\n\r\n    public void setSeller(boolean seller) {\r\n        IsSeller = seller;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Client{\" +\r\n                \"UserName='\" + UserName + '\\'' +\r\n                \", FirstName='\" + FirstName + '\\'' +\r\n                \", LastName='\" + LastName + '\\'' +\r\n                \", Email='\" + Email + '\\'' +\r\n                \", PhoneNumber='\" + PhoneNumber + '\\'' +\r\n                \", Password='\" + Password + '\\'' +\r\n                \", IsSeller=\" + IsSeller +\r\n                '}';\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/ecommerce/Client.java	(revision 4ec2838ff6a361be7691f5ee765fc772926d8ae3)
+++ app/src/main/java/com/example/ecommerce/Client.java	(date 1623849469889)
@@ -8,6 +8,7 @@
     private String PhoneNumber;
     private String Password;
     private boolean IsSeller;
+    private int Login_count;
 
     public Client(String userName, String firstName, String lastName, String email, String phoneNumber, String password, boolean is_Seller) {
         UserName = userName;
@@ -17,6 +18,18 @@
         PhoneNumber = phoneNumber;
         Password = password;
         IsSeller = is_Seller;
+        Login_count = 1;
+    }
+
+    public Client(String userName, String firstName, String lastName, String email, String phoneNumber, String password, boolean isSeller,  int login_count) {
+        UserName = userName;
+        FirstName = firstName;
+        LastName = lastName;
+        Email = email;
+        PhoneNumber = phoneNumber;
+        Password = password;
+        IsSeller = isSeller;
+        Login_count = login_count;
     }
 
     public Client() {
@@ -78,6 +91,14 @@
         IsSeller = seller;
     }
 
+    public int getLogin_count() {
+        return Login_count;
+    }
+
+    public void setLogin_count(int login_count) {
+        this.Login_count = login_count;
+    }
+
     @Override
     public String toString() {
         return "Client{" +
Index: .idea/runConfigurations.xml
===================================================================
--- .idea/runConfigurations.xml	(revision 4ec2838ff6a361be7691f5ee765fc772926d8ae3)
+++ .idea/runConfigurations.xml	(revision 4ec2838ff6a361be7691f5ee765fc772926d8ae3)
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="RunConfigurationProducerService">
-    <option name="ignoredProducers">
-      <set>
-        <option value="com.android.tools.idea.compose.preview.runconfiguration.ComposePreviewRunConfigurationProducer" />
-      </set>
-    </option>
-  </component>
-</project>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_home.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".HomeFragment\">\r\n\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView1\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Home Fragment\"\r\n        android:textSize=\"32dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/search_bar_main\"\r\n        android:layout_width=\"300dp\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_marginStart=\"30dp\"\r\n        android:layout_marginTop=\"28dp\"\r\n        android:layout_marginEnd=\"10dp\"\r\n        android:background=\"@drawable/search_bg\"\r\n        android:drawableStart=\"@drawable/ic_baseline_search_24\"\r\n        android:ems=\"10\"\r\n        android:hint=\"Search...\"\r\n        android:inputType=\"textPersonName\"\r\n        android:paddingStart=\"10\"\r\n        app:layout_constraintEnd_toStartOf=\"@id/profile_dropdown\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <Spinner\r\n        android:id=\"@+id/profile_dropdown\"\r\n        android:layout_width=\"48dp\"\r\n        android:layout_height=\"48dp\"\r\n        android:layout_marginTop=\"28dp\"\r\n        android:layout_marginEnd=\"20dp\"\r\n        android:background=\"@drawable/ic_baseline_account_circle_24\"\r\n        android:dropDownVerticalOffset=\"-15dp\"\r\n        android:spinnerMode=\"dropdown\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_home.xml	(revision 4ec2838ff6a361be7691f5ee765fc772926d8ae3)
+++ app/src/main/res/layout/fragment_home.xml	(date 1623841793102)
@@ -30,7 +30,7 @@
         android:ems="10"
         android:hint="Search..."
         android:inputType="textPersonName"
-        android:paddingStart="10"
+        android:paddingStart="10dp"
         app:layout_constraintEnd_toStartOf="@id/profile_dropdown"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent" />
